# -*- coding: utf-8 -*-
"""feature_extraction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LUys_IfZWcKpApy6yyCSaVmOCSJSP1Jf

# Step 2: Extract Keypoints and Descriptors Using SIFT, SURF, and ORB (30 points)
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt

def extract_features(image, method):
    """
    Extract keypoints and descriptors from an image using the specified method.

    :param image: Input image
    :param method: 'SIFT', 'SURF', or 'ORB'
    :return: keypoints, descriptors
    """
    if method == 'SIFT':
        detector = cv2.SIFT_create()
    elif method == 'SURF':
        detector = cv2.xfeatures2d.SURF_create()  # Note: This might not work in newer OpenCV versions
    elif method == 'ORB':
        detector = cv2.ORB_create()
    else:
        raise ValueError("Unsupported method. Choose 'SIFT', 'SURF', or 'ORB'.")

    keypoints, descriptors = detector.detectAndCompute(image, None)
    return keypoints, descriptors

def display_keypoints(image, keypoints, title):
    """
    Display image with keypoints.

    :param image: Input image
    :param keypoints: List of keypoints
    :param title: Title for the plot
    """
    img_keypoints = cv2.drawKeypoints(image, keypoints, None, color=(0, 255, 0))
    plt.figure(figsize=(10, 8))
    plt.imshow(cv2.cvtColor(img_keypoints, cv2.COLOR_BGR2RGB))
    plt.title(title)
    plt.axis('off')
    plt.show()

# Usage example
image = cv2.imread('NEWTON_1.webp')
keypoints, descriptors = extract_features(image, 'SIFT')
display_keypoints(image, keypoints, 'SIFT Keypoints')

# Display All
if __name__ == "__main__":
    # Load image
    image = cv2.imread('NEWTON_1.webp')

    methods = ['SIFT', 'SURF', 'ORB']

    for method in methods:
        keypoints, descriptors = extract_features(image, method)
        print(f"{method}:")
        print(f"  Number of keypoints: {len(keypoints)}")
        print(f"  Descriptor shape: {descriptors.shape}")
        print()

        # Display keypoints
        display_keypoints(image, keypoints, f'{method} Keypoints')